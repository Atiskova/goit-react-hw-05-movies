{"version":3,"file":"static/js/52.d616a275.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/Section/Section.jsx","service/api.js","views/Home.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { routes } from 'routes';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <NavLink state={{ from: location }} to={'/' + routes.MOVIES + '/' +  movie.id}>\n                <span>{movie.title || movie.name}</span>\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\n\nexport const Section = ({ children }) => {\n  return (\n    <section>\n      <div>{children}</div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c978ef3256c1133ebe18d58ddb2527be';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  const movies = results.map(({ id, title, name }) => ({\n    id,\n    title,\n    name,\n  }));\n  return { movies };\n};\n\nexport const getSearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const { results } = data;\n  const movies = results.map(({ id, title, name }) => ({\n    id,\n    title,\n    name,\n  }));\n  return { movies };\n};\n\nexport const getDetails = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n \n  return {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  };\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const cast = data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profile_path,\n  }));\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  \n  return reviews;\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getTrendingMovies } from 'service/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrending = async () => {\n      try {\n        setLoading(true);\n        const { movies } = await getTrendingMovies();\n        setMovies(movies);\n\n        setError(null);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrending();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  return (\n    <>\n      <Section>\n        <h1>Trending today</h1>\n        {movies.length > 0 && <MoviesList movies={movies} />}\n      </Section>\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["MoviesList","movies","location","useLocation","map","movie","state","from","to","routes","id","title","name","Section","children","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","getSearch","query","getDetails","poster_path","release_date","vote_average","overview","genres","getCast","cast","character","profile_path","getReviews","reviews","author","content","useState","setMovies","loading","setLoading","error","setError","useEffect","getTrending","massage","alert","length"],"sourceRoot":""}