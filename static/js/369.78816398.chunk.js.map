{"version":3,"file":"static/js/369.78816398.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","service/api.js","components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","helpers/formatDate.js","views/MovieDetail.styled.js","views/MovieDetail.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const Section = ({ children }) => {\n  return (\n    <section>\n      <div>{children}</div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c978ef3256c1133ebe18d58ddb2527be';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  const movies = results.map(({ id, title, name }) => ({\n    id,\n    title,\n    name,\n  }));\n  return { movies };\n};\n\nexport const getSearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const { results } = data;\n  const movies = results.map(({ id, title, name }) => ({\n    id,\n    title,\n    name,\n  }));\n  return { movies };\n};\n\nexport const getDetails = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n \n  return {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  };\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const cast = data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profile_path,\n  }));\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  \n  return reviews;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  margin: 30px;\n\n  :hover {\n    color: red;\n  }\n`;","import { Links } from './BackButton.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackButton = ({ path }) => {\n  return (\n    <Links\n      to={path}\n    >\n      â¬… Go back\n    </Links>\n  );\n};\n\nBackButton.propTypes = {\n  path: PropTypes.object.isRequired,\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\ndisplay: flex;\npadding: 30px;\ngap: 20px;\nborder-bottom: 1px solid grey; \n`","import PropTypes from 'prop-types';\nimport { formatDate } from 'helpers/formatDate';\nimport { Container } from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  poster_path,\n  title,\n  name,\n  release_date,\n  vote_average,\n  overview,\n  genres,\n}) => {\n  const getPoster = () => {\n    if (poster_path) {\n      return `https://image.tmdb.org/t/p/w500/${poster_path}`;\n    } else {\n      return 'https://dummyimage.com/300x450/ccc/fff.jpg&text=No+poster';\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <img src={getPoster()} alt={title || name} width='300'/>\n      </div>\n      <div>\n        <div>\n          <h1>\n            {title || name} (\n            <span>\n              {''}\n              {release_date && formatDate(release_date)}\n            </span>\n            )\n          </h1>\n        </div>\n\n        <div>\n          <p>\n            User Score: <span>{Math.round(vote_average * 10)}%</span>\n          </p>\n        </div>\n\n        <div>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n        </div>\n\n        <div>\n          <h2>Genres</h2>\n          <p>{genres && genres.map(el => `${el.name} `)}</p>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  release_date: PropTypes.string,\n};\n","import { format } from 'date-fns';\n\nexport const formatDate = (date) => {\n  return format(new Date(date), 'yyy');\n};","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  border-bottom: 1px solid grey;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 20px;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n","import { useParams, useLocation, NavLink } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { useState, useEffect } from 'react';\nimport { BackButton } from 'components/BackButton/BackButton';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { getDetails } from 'service/api';\nimport { Outlet } from 'react-router-dom';\nimport { Container, Title, ListItem } from './MovieDetail.styled';\n\n\nconst MovieDetail = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMoviesDetails = async () => {\n      try {\n        setLoading(true);\n        const movie = await getDetails(movieId);\n        setMovie(movie);\n\n        setError(null);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMoviesDetails();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  const backPath = location.state?.from ?? routes.HOME;\n\n  return (\n    <>\n      <BackButton path={backPath} />\n      {loading && <Loader />}\n      <Section>\n        <MovieInfo {...movie} />\n      </Section>\n      <Container>\n        <Title>Additional information</Title>\n        <ul>\n          <ListItem>\n            <NavLink to=\"cast\" state={{ from: backPath }}>\n              Cast\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"reviews\" state={{ from: backPath }}>\n              Reviews\n            </NavLink>\n          </ListItem>\n          <Outlet />\n        </ul>\n      </Container>\n      \n    </>\n  );\n};\n\nexport default MovieDetail;\n"],"names":["Section","children","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","movies","map","id","title","name","getSearch","query","getDetails","poster_path","release_date","vote_average","overview","genres","getCast","cast","character","profile_path","getReviews","reviews","author","content","Links","styled","Link","BackButton","path","to","Container","MovieInfo","date","src","alt","width","format","Date","Math","round","el","Title","ListItem","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","useEffect","getMoviesDetails","massage","alert","backPath","state","from","routes","Loader"],"sourceRoot":""}