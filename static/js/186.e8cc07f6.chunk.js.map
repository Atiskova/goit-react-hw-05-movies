{"version":3,"file":"static/js/186.e8cc07f6.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getReviews } from 'service/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMoviesReviews = async () => {\n      try {\n        setLoading(true);\n        const reviews = await getReviews(movieId);\n        setReviews(reviews);\n\n        setError(null);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMoviesReviews();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    alert(error);\n  }, [error]);\n\n  return (\n    <>\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>\n                  Author: <span>{author}</span>\n                </p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c978ef3256c1133ebe18d58ddb2527be';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  const { results } = data;\n  const movies = results.map(({ id, title, name }) => ({\n    id,\n    title,\n    name,\n  }));\n  return { movies };\n};\n\nexport const getSearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const { results } = data;\n  const movies = results.map(({ id, title, name }) => ({\n    id,\n    title,\n    name,\n  }));\n  return { movies };\n};\n\nexport const getDetails = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n \n  return {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  };\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const cast = data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profile_path,\n  }));\n  return cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  \n  return reviews;\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","getMoviesReviews","getReviews","massage","alert","map","id","author","content","length","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","movies","title","name","getSearch","query","getDetails","poster_path","release_date","vote_average","overview","genres","getCast","cast","character","profile_path"],"sourceRoot":""}